
+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'a', type = IntType}
 VarDeclStatement{name = 'b', type = IntType}
 AssignmentStatement{a = ValueExp{val = 5}}
 AssignmentStatement{b = ValueExp{val = 5}}
 VarDeclStatement{name = 'c', type = IntType}
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
Empty

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'a', type = IntType}
Symbol Table:
Empty

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'a', type = IntType}
Symbol Table:
Empty

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'b', type = IntType}
 AssignmentStatement{a = ValueExp{val = 5}}
 AssignmentStatement{b = ValueExp{val = 5}}
 VarDeclStatement{name = 'c', type = IntType}
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'b', type = IntType}
 AssignmentStatement{a = ValueExp{val = 5}}
 AssignmentStatement{b = ValueExp{val = 5}}
 VarDeclStatement{name = 'c', type = IntType}
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'b', type = IntType}
Symbol Table:
a -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'b', type = IntType}
Symbol Table:
a -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{a = ValueExp{val = 5}}
 AssignmentStatement{b = ValueExp{val = 5}}
 VarDeclStatement{name = 'c', type = IntType}
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 0, b -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{a = ValueExp{val = 5}}
 AssignmentStatement{b = ValueExp{val = 5}}
 VarDeclStatement{name = 'c', type = IntType}
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 0, b -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{a = ValueExp{val = 5}}
Symbol Table:
a -> 0, b -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{a = ValueExp{val = 5}}
Symbol Table:
a -> 0, b -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{b = ValueExp{val = 5}}
 VarDeclStatement{name = 'c', type = IntType}
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{b = ValueExp{val = 5}}
 VarDeclStatement{name = 'c', type = IntType}
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{b = ValueExp{val = 5}}
Symbol Table:
a -> 5, b -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{b = ValueExp{val = 5}}
Symbol Table:
a -> 5, b -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'c', type = IntType}
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 5, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'c', type = IntType}
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 5, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'c', type = IntType}
Symbol Table:
a -> 5, b -> 5, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 VarDeclStatement{name = 'c', type = IntType}
Symbol Table:
a -> 5, b -> 5, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 5, c -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 5, c -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
Symbol Table:
a -> 5, b -> 5, c -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 AssignmentStatement{c = ArithmeticExpression{leftExp = VariableExpression{id = a} , op = DIVIDE , rightExp = VariableExpression{id = b}}}
Symbol Table:
a -> 5, b -> 5, c -> 0, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 5, c -> 1, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 PrintStatement{VariableExpression{id = c}}
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 5, c -> 1, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 PrintStatement{VariableExpression{id = c}}
Symbol Table:
a -> 5, b -> 5, c -> 1, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 PrintStatement{VariableExpression{id = c}}
Symbol Table:
a -> 5, b -> 5, c -> 1, 

Output:
[]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 5, c -> 1, 

Output:
[1]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
 PrintStatement{VariableExpression{id = b}}
Symbol Table:
a -> 5, b -> 5, c -> 1, 

Output:
[1]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +



+ - - - - - - - - PROGRAM STATE - - - - - - - - +

ID: 1
Execution Stack:
Symbol Table:
a -> 5, b -> 5, c -> 1, 

Output:
[1, 5]
FileTable:
Empty

Heap:
Empty heap
+ - - - - - - - - - - - - - - - - - - - - - - - +


